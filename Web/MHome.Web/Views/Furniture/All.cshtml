@using MHome.Common
@model MHome.Web.ViewModels.FurnitureViewModels.AllFurnitureViewModel

@{
    ViewData["Title"] = "Furniture Catalogue";
}

<div class="row">
    <div class="col-md-4">
        <h1>Catalogue</h1>

        @if (User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
             <p> 
                <a class="btn btn-info" asp-action="Create">Create New</a>
            </p>
        }

        @foreach(string category in Model.Categories)
        {
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="@category" name="categoryCheckbox" value="@category">
                <label class="form-check-label" for="@category">@category</label>
            </div>
        }
    </div>
    <div class="col-md-6 justify-content-end">
        <form method="get" asp-controller="Furniture" asp-action="All" class="mt-5">
            <div class="input-group">
                @if (Model.SearchQuery == null)
                {
                    <input type="text" name="search" class="form-control" placeholder="Search....">
                }
                else
                {
                    <input type="text" name="search" class="form-control" value="@Model.SearchQuery">
                }
                <div class="input-group-btn">
                    <button class="btn btn-info" type="submit">
                        Search
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>     
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AllFurniture)
        {
            <tr name="trData">
                <td> 
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)$
                </td>
                <td>
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-info" asp-action="AddCart" asp-route-id="@item.Id">Order</a>
                    @if (User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
                <td hidden>
                    @item.CategoryName
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    (function() {
        let checkBoxes = document.getElementsByName("categoryCheckbox");
        for (let box of checkBoxes) {
            box.addEventListener('click', (e) => {

                let targetValue = e.target.value;
                let tableRows = document.getElementsByName('trData');
                let rowsToDelete = [];

                for (let row of tableRows){
                    let categoryOfRow = row.childNodes[row.childNodes.length - 2].childNodes[0].data.trim();

                    if (categoryOfRow !== targetValue){
                        rowsToDelete.push(row); 
                    }
                }

                for (let row of rowsToDelete){
                    row.parentNode.removeChild(row);
                };
            }); 
        }
    })();
</script>