@using MHome.Common
@model MHome.Web.ViewModels.FurnitureViewModels.AllFurnitureViewModel

@{
    ViewData["Title"] = "Furniture Catalogue";
}

<div class="row">
    <div class="col-md-4">
        <h1 style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif">Catalogue</h1>

        @if (User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
             <p> 
                <a class="btn btn-dark" asp-action="Create">Create New</a>
            </p>
        }
@*
        @foreach(string category in Model.Categories)
        {
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="@category" name="categoryCheckbox" value="@category">
                <label class="form-check-label" for="@category">@category</label>
            </div>
        }*@
    </div>
    <div class="col-md-6 justify-content-end" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif">
        <form method="get" asp-controller="Furniture" asp-action="All" class="mt-5">
            <div class="input-group">
                @if (Model.SearchQuery == null)
                {
                    <input type="text" name="search" class="form-control" placeholder="Search....">
                }
                else
                {
                    <input type="text" name="search" class="form-control" value="@Model.SearchQuery">
                }
                <div class="input-group-btn">
                    <button class="btn btn-dark" type="submit">
                        Search
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="row mt-4 justify-content-center">
    @foreach (var item in Model.AllFurniture)
    {
        <div class="card m-2" style="width: 20rem;">
            <img class="card-img-top" src="@item.ImageURL" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif">Name: @item.Name</h5>
                @if (User.Identity.IsAuthenticated)
                {
                    <strong>
                        <s>
                            @Html.DisplayFor(modelItem => item.Price)$
                        </s>
                        <p style="color: red">
                            @Html.DisplayFor(modelItem => item.PriceWithDiscount)$
                        </p>
                    </strong>             
                }
                else
                {
                    <strong>
                        <p>
                            @Html.DisplayFor(modelItem => item.Price)$
                        </p>
                    </strong>                
                }
                <h5 class="card-title" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif">Category: @item.CategoryName</h5>
                <h5 class="card-title" hidden>@item.CategoryName</h5>
                <a class="btn btn-dark" asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (User.Identity.IsAuthenticated && !User.IsInRole(GlobalConstants.AdministratorRoleName))
                {
                    <a class="btn btn-dark" asp-controller="Order" asp-action="Create" asp-route-id="@item.Id">Order</a>
                }
                @if (User.IsInRole(GlobalConstants.AdministratorRoleName))
                {
                    <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </div>
        </div>
    }
</div>


@*<script>
    (function() {
        let checkBoxes = document.getElementsByName("categoryCheckbox");
        for (let box of checkBoxes) {
            box.addEventListener('click', (e) => {

                let targetValue = e.target.value;
                let tableRows = document.getElementsByName('trData');
                let rowsToDelete = [];

                for (let row of tableRows){
                    let categoryOfRow = row.childNodes[row.childNodes.length - 2].childNodes[0].data.trim();

                    if (categoryOfRow !== targetValue){
                        rowsToDelete.push(row); 
                    }
                }

                for (let row of rowsToDelete){
                    row.parentNode.removeChild(row);
                };
            }); 
        }
    })();
</script>*@